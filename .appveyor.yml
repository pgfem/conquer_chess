image: Visual Studio 2022

install:
  # g++
  # Although cygwin looks cleaner, the Qt version 5.6.3 is compatible with
  # MinGW 4.9.0
  - set PATH=%PATH%;C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin
  # - set PATH=%PATH%;C:\cygwin\bin
  # qmake
  # This is the last documentated Qt version with a compatible MinWG version, 
  #   https://www.appveyor.com/docs/windows-images-software/,
  #   but it does not exist anymore :-/
  # - set QTDIR=C:\Qt\5.6.3\mingw492_32
  - set QTDIR=C:\Qt\6.8.1\mingw_64
  - set PATH=%PATH%;%QTDIR%\bin
  # Boost
  - set PATH=%PATH%;C:\Libraries\boost_1_86_0
  # SFML (TODO)

build_script:
  # Explore the tools
  - g++.exe --version
  - g++ --version
  # Explore file system
  - echo %cd%
  - dir C:\
  - dir C:\mingw-w64
  - dir C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0
  - dir C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64
  - dir C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin
  #- dir C:\mingw-w64
  #- dir C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64
  #- dir C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin
  #- dir C:\cygwin
  #- dir C:\cygwin\bin
  - dir C:\Qt
  - dir C:\Qt\6.8.1
  - dir C:\Qt\6.8.1\mingw_64
  - dir C:\Qt\6.8.1\mingw_64\bin
  - dir C:\Libraries
  - dir C:\Libraries\boost_1_86_0
  # Find out current folder's content
  - dir
  # SFML
  - cd ..
  - curl https://www.sfml-dev.org/files/SFML-3.0.0-windows-gcc-14.2.0-mingw-32-bit.zip > SFML-3.0.0-windows-gcc-14.2.0-mingw-32-bit.zip
  - unzip SFML-3.0.0-windows-gcc-14.2.0-mingw-32-bit.zip
  - dir
  - dir SFML-3.0.0
  - rename SFML-3.0.0 SFML
  
  - echo "Fixing std::byte -> unsigned char in SFML"
  - powershell -Command "(Get-Content SFML/include/SFML/System/Utf.inl) -replace 'std::byte', 'unsigned char' | Set-Content SFML/include/SFML/System/Utf.inl"

  - dir
  - dir SFML
  - dir SFML\include
  - dir SFML\lib
  # - move SFML-3.0.0 SFML
  - cd conquer-chess
  - qmake "DEFINES+=LOGIC_ONLY" game.pro
  - mingw32-make

  # - dir
  # magic_enum, download
  - echo "Download magic_enum"
  - cd .. 
  - git clone https://github.com/Neargye/magic_enum
  - cd conquer-chess
  # magic_enum, install
  - echo "Install magic_enum"
  - cd ../magic_enum
  - cmake .
  # Skip the make step
  #- dir
  #- dir cmake
  #- dir CMakeFiles
  #- dir example
  #- make.exe
  - cd ..\conquer-chess
  # Disservin's chess-library, download
  - echo "Disservin's chess-library"
  - cd ..
  - git clone https://github.com/Disservin/chess-library.git
  - cd conquer-chess
  # Jerrit Gläsker's SFGraphing library
  - echo "Download Jerrit Gläsker's SFGraphing library"
  - cd ..
  - git clone https://github.com/richelbilderbeek/SFGraphing -b patch-1
  - cd conquer-chess
  # Conquer Chess
  - echo "Building Conquer Chess"

  

  

  # No idea what 'mingw32-cd' does ...
  # - mingw32-cd
  # - make release
  # - make.exe release
  - mingw32-make.exe release
  # - mingw32-make.exe release
  - conquer_chess.exe --version

artifacts:
  # The goal of this CI script
  - path: conquer_chess.exe
